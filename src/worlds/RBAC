菜单权限：
控制用户访问不同页面基本实现思路
1.使用 "全局前置守卫"（router.beforeEach），在导航触发时向后端发送一个包含用户信息的请求
2.后端查询数据库中该用户可以访问的菜单（也就是 vue 的路由信息）并返回
3.前端把接收到的数据添加到路由里，并根据新的路由表动态渲染出导航栏，使不同用户登录后看到不同的菜单。
  同时，由于路由表也是按需加载的，所以用户也无法通过 URL 访问没有权限的页面
功能权限：
思路1：按权限加载组件。即在渲染页面前向后端发送请求，获取有权限使用的组件并动态渲染，
       并在需要调用后端接口时进行判断，防止用户通过自行构造请求的方式绕过限制
思路2：按权限加载组件。即在渲染页面前向后端发送请求，获取有权限使用的组件并动态渲染，
       并在需要调用后端接口时进行判断，防止用户通过自行构造请求的方式绕过限制
数据权限：
两个层次，一是对可访问性的控制，二是对数据量的控制
可访问性可以针对表、字段或满足某些条件的数据。针对表、字段的控制，主要依靠在业务逻辑执行前进行判断，
   比如在调用对收支信息表的查询前判断当前用户是否具有财务权限。而访问特定数据，可以直接通过 SQL 语句
   （WHERE 条件）来实现，比如当前用户只能查询出自身拥有的书籍，就可以通过类似 "SELECT * FROM book WHERE uid = #{uid}"
    的语句来实现。

